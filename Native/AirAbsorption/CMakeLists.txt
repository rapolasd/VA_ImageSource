cmake_minimum_required (VERSION 3.1)
# Determine shared air absorption library name
if (MSVC)
  set (AirAbsorptionProxy_LIB libAirAbsorptionProxy.dll)
elseif(APPLE)
  set (AirAbsorptionProxy_LIB libAirAbsorptionProxy.dylib)
elseif(UNIX)
  set (AirAbsorptionProxy_LIB libAirAbsorptionProxy.so)
endif()

# Add autogenerated dependencies
set (AirAbsorptionProxy_DIR ${CMAKE_CURRENT_SOURCE_DIR}/codegen/dll/airAbsorptionProxy)

message(STATUS ${AirAbsorptionProxy_DIR})
# Add Air Absorption build if the code has been autogenerated
IF (EXISTS ${AirAbsorptionProxy_DIR})
  message (STATUS "AirAbsorption library path found, adding it to the build.")
  include_directories(${AirAbsorptionProxy_DIR})
  link_directories(${AirAbsorptionProxy_DIR})
  # Add installation of AirAbsorptionProxy
  install(FILES ${AirAbsorptionProxy_DIR}/${AirAbsorptionProxy_LIB} DESTINATION ${NATIVE_ASSETS_DIR_X86_64})
  IF(MSVC)
    INSTALL ( FILES ${AirAbsorptionProxy_DIR}/libAirAbsorptionProxy.pdb
      DESTINATION ${NATIVE_ASSETS_DIR_X86_64}
      CONFIGURATIONS Debug
      )
  ENDIF(MSVC)
  # continue with AirAbsorptionWrapper
  add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/AirAbsorptionWrapper)
ELSE()
  message (WARNING "AirAbsorption library path not found! The library is not added to the actual build.")
ENDIF()